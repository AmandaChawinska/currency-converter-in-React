{"version":3,"sources":["GlobalStyle.js","container/styled.js","container/index.js","Header/styled.js","Header/index.js","Footer/styled.js","Footer/index.js","Form/styled.js","Form/index.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","App.js","serviceWorker.js","index.js","theme.js","background.jpg"],"names":["GlobalStyle","createGlobalStyle","background","StyledContainer","styled","div","Container","children","StyledHeader","header","theme","color","red","black","Header","title","StyledFooter","footer","Footer","StyledFieldset","fieldset","yellow","StyledLegend","legend","lemon","StyledLabelText","span","StyledButton","button","Form","calculateResult","setResult","useState","amount","setAmount","changeFrom","setchangeFrom","changeOn","setchangeOn","onSubmit","event","preventDefault","onReset","type","name","min","step","required","autoFocus","value","onChange","target","className","StyledResult","p","Result","result","Wrapper","Clock","date","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","hour","minute","second","day","month","formatDate","App","rates","PLN","EUR","USD","GBP","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","white","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.e9192190.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\"\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, *::before, *::after {\r\n    box-sizing: inherit;\r\n    }\r\n    \r\n    body {\r\n    font-family: \"Lato\", sans-serif;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    min-height: 100vh;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div `\r\n    margin: 20px 40px 20px 20px;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header `\r\n    background-color: ${({ theme }) => theme.color.red};\r\n    border: 5px solid ${({ theme }) => theme.color.black};\r\n    border-radius: 20px;\r\n    padding: 20px 0;\r\n    font-weight: unset;\r\n    font-size: 30px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        {title}\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n    text-align: center;\r\n`;","import React from \"react\";\r\nimport { StyledFooter } from \"./styled\";\r\n\r\nconst Footer = ({ title }) => (\r\n    <StyledFooter>\r\n        {title}\r\n    </StyledFooter>\r\n);\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFieldset = styled.fieldset `\r\n    border-color: ${({ theme }) => theme.color.yellow};\r\n    border-radius: 25px;\r\n    width: 50%;\r\n    display: inline-block;\r\n\r\n`;\r\n\r\nexport const StyledLegend = styled.legend `\r\n      border: 2px dashed;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.lemon};\r\n    color: ${({ theme }) => theme.color.black};\r\n    font-size: 20px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const StyledLabelText = styled.span `\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    margin: 0px 2px;\r\n\r\n`;\r\n\r\nexport const StyledButton = styled.button ` \r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    padding: 15px;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.color.lemon};\r\n    margin: 30px;\r\n    line-height: 1.5;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    \r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n`;","import React, { useState } from \"react\";\r\nimport {\r\n  StyledFieldset,\r\n  StyledLegend,\r\n  StyledLabelText,\r\n  StyledButton,\r\n} from \"./styled\";\r\n\r\n\r\nconst Form = ({ calculateResult, setResult }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [changeFrom, setchangeFrom] = useState(\"PLN\");\r\n  const [changeOn, setchangeOn] = useState(\"EUR\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(changeFrom, changeOn, amount);\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n    setAmount(\"\");\r\n    setchangeFrom(\"PLN\");\r\n    setchangeOn(\"EUR\");\r\n    setResult(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n\r\n      <StyledFieldset>\r\n        <StyledLegend>Wymiana waluty</StyledLegend>\r\n\r\n        <p>\r\n          <label>\r\n            <StyledLabelText>Wybierz wartość*:</StyledLabelText>\r\n            <input\r\n             \r\n              type=\"number\"\r\n              name=\"amount\"\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              required\r\n              autoFocus\r\n              value={amount}\r\n              onChange={({ target }) => setAmount(target.value)}\r\n            />\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <label>\r\n            <StyledLabelText>Posiadam walutę:</StyledLabelText>\r\n            <select\r\n              value={changeFrom}\r\n              onChange={({ target }) => setchangeFrom(target.value)}\r\n              required\r\n            >\r\n              <option>PLN</option>\r\n              <option>USD</option>\r\n              <option>GBP</option>\r\n              <option>EUR</option>\r\n\r\n            </select>\r\n          </label>\r\n        </p>\r\n        <p>\r\n          <label>\r\n            <StyledLabelText>Chcę otrzymać:</StyledLabelText>\r\n            <select\r\n              value={changeOn}\r\n              onChange={({ target }) => setchangeOn(target.value)}\r\n              required\r\n            >\r\n              <option>PLN</option>\r\n              <option>USD</option>\r\n              <option>GBP</option>\r\n              <option>EUR</option>\r\n\r\n            </select>\r\n          </label>\r\n        </p>\r\n\r\n        <p>\r\n          <StyledButton>Przelicz</StyledButton>\r\n       \r\n          <StyledButton type=\"reset\">\r\n            Od nowa\r\n          </StyledButton>\r\n        </p>\r\n        <p className=\"form__result\">Otrzymbvbana kwota: <span className=\"form__result\">N/A</span> </p>\r\n      </StyledFieldset>\r\n\r\n    </form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p `\r\n    text-align: left;\r\n    font-size: 20px;\r\n\r\n`;","import React from \"react\";\r\nimport { StyledResult } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <p>\r\n        <StyledResult> cococsds {result}</StyledResult>\r\n    </p>\r\n\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: ${({ theme }) => theme.color.black};\r\n`;","import React from \"react\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n})\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n    \r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    )\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date ());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n\r\n};","import React, { useState } from 'react';\nimport Container from './container';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Form from './Form';\nimport Result from './Result';\nimport { Clock } from './Clock';\n\n\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n\n  const rates = {\n    PLN: 1,\n    EUR: 4.4532,\n    USD: 3.9395,\n    GBP: 4.9256,\n  };\n  const calculateResult = (changeFrom, changeOn, amount) => {\n     const result = (amount * rates[changeFrom]) / rates[changeOn];\n\n    \n    setResult(`${result.toFixed(2)}`);\n  };\n\n  return (\n    <>\n      <Container>\n\n        <Header title=\"Internetowy przelicznik walut &Prime;ItakCięNieStać&Prime;😈\" />\n        <div>\n          <Clock />\n          <Form calculateResult={calculateResult} setResult={setResult}\n          />\n          <Result result={result} />\n        </div>\n\n        <Footer title=\"Pole oznaczone * jest obowiązkowe. \n      Kurs walut z dnia 25.06.2020 r.\"></Footer>\n\n      </Container >\n    </>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from \"./theme\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        red: \"#ff3333\",\r\n        yellow: \"#ffff00\",\r\n        lemon: \"#cfdb24\",\r\n        white: \"#fff\",\r\n    },\r\n};","module.exports = __webpack_public_path__ + \"static/media/background.25f19c86.jpg\";"],"sourceRoot":""}