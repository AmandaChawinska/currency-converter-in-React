{"version":3,"sources":["background.jpg","GlobalStyle.js","container/styled.js","container/index.js","Header/styled.js","Header/index.js","Form/Result/styled.js","Form/Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Form/styled.js","Form/useRatesData.js","Form/index.js","App.js","serviceWorker.js","index.js","theme.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","background","StyledContainer","styled","div","Container","children","StyledHeader","header","theme","color","red","black","Header","title","StyledResult","p","Result","result","Wrapper","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","toLocaleString","undefined","weekday","hour","minute","second","day","month","formatDate","StyledFieldset","fieldset","light","StyledLegend","legend","lemon","StyledLabelText","span","StyledButton","button","Loading","Failure","Footer","useRatesData","state","RatesData","setRatesData","setTimeout","a","fetch","response","ok","Error","statusText","json","rates","Form","calculateResult","setResult","amount","setAmount","changeFrom","setChangeFrom","changeOn","setChangeOn","ratesData","onSubmit","event","preventDefault","onReset","type","name","min","step","required","autoFocus","value","onChange","target","Object","keys","map","key","App","toFixed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","yellow","white","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0980dbdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.25f19c86.jpg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport background from \"./background.jpg\"\r\n\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\n    html {\r\n    box-sizing: border-box;\r\n    }\r\n\r\n    *, *::before, *::after {\r\n    box-sizing: inherit;\r\n    }\r\n    \r\n    body {\r\n    font-family: \"Lato\", sans-serif;\r\n    background-image: url(\"${background}\");\r\n    background-size: cover;\r\n    min-height: 100vh;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div `\r\n    margin: 20px 40px 20px 20px;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n`;","import React from \"react\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <StyledContainer>\r\n        {children}\r\n    </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header `\r\n    background-color: ${({ theme }) => theme.color.red};\r\n    border: 5px solid ${({ theme }) => theme.color.black};\r\n    border-radius: 20px;\r\n    padding: 20px 0;\r\n    font-weight: unset;\r\n    font-size: 30px;\r\n    margin-bottom: 40px;\r\n`;","import React from \"react\";\r\nimport { StyledHeader } from \"./styled\";\r\n\r\nconst Header = ({ title }) => (\r\n    <StyledHeader>\r\n        {title}\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const StyledResult = styled.p `\r\n    text-align: left;\r\n    font-size: 20px;\r\n\r\n`;","import React from \"react\";\r\nimport { StyledResult } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <>\r\n        <StyledResult> Otrzymana kwota: {result}</StyledResult>\r\n    </>\r\n\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div `\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: ${({ theme }) => theme.color.black};\r\n    font-weight: bold;\r\n    padding: 10px;\r\n    font-size: 15px;\r\n`;","import React from \"react\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\nimport { Wrapper } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n})\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n    \r\n\r\n    return (\r\n        <Wrapper>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Wrapper>\r\n    )\r\n};","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date ());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return date;\r\n\r\n};","import styled from \"styled-components\";\r\n\r\nexport const StyledFieldset = styled.fieldset`\r\n    border-color: ${({ theme }) => theme.color.black};\r\n    border-radius: 25px;\r\n    width: 50%;\r\n    display: inline-block;\r\n    background: ${({ theme }) => theme.color.light};\r\n\r\n`;\r\n\r\nexport const StyledLegend = styled.legend`\r\n    border: 2px dashed;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.color.lemon};\r\n    color: ${({ theme }) => theme.color.black};\r\n    font-size: 20px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const StyledLabelText = styled.span`\r\n    font-size: 18px;\r\n    font-style: italic;\r\n    margin: 0px 2px;\r\n`;\r\n\r\nexport const StyledButton = styled.button` \r\n    cursor: pointer;\r\n    border-radius: 20px;\r\n    padding: 15px;\r\n    border: none;\r\n    background-color: ${({ theme }) => theme.color.lemon};\r\n    margin: 30px;\r\n    line-height: 1.5;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    \r\n\r\n    &:hover {\r\n        filter: brightness(110%);\r\n    }\r\n\r\n`;\r\n\r\nexport const Loading = styled.p`\r\n    color:${({ theme }) => theme.color.black};\r\n    font-size: 50px;\r\n`;\r\n\r\nexport const Failure = styled.p`\r\n    color:${({ theme }) => theme.color.red};\r\n`;\r\n\r\nexport const Footer = styled.p`\r\n    text-align: center;\r\n    padding: 20px;\r\n    font-weight: bold;\r\n   \r\n`;","import { useEffect, useState } from \"react\";\r\n\r\nexport const useRatesData = () => {\r\n    const [RatesData, setRatesData] = useState({\r\n        state: \"loading\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchRates =async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.exchangeratesapi.io/latest?base=PLN \");\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(response.statusText);\r\n                }\r\n\r\n                const { rates, date } =await response.json();\r\n\r\n                setRatesData({\r\n                    state: \"success\",\r\n                    rates,\r\n                    date,\r\n                });\r\n\r\n            } catch {\r\n                setRatesData({\r\n                    state: \"error\",\r\n                });\r\n            }\r\n        };\r\n\r\n        setTimeout(fetchRates, 2000);\r\n    }, []);\r\n\r\n    return RatesData;\r\n};","import React, { useState } from \"react\";\r\nimport Result from \"./Result\";\r\nimport { Clock } from '../Clock';\r\nimport {\r\n  StyledFieldset,\r\n  StyledLegend,\r\n  StyledLabelText,\r\n  StyledButton,\r\n  Loading,\r\n  Failure,\r\n  Footer,\r\n} from \"./styled\";\r\n\r\nimport { useRatesData } from \"./useRatesData\";\r\n\r\n\r\n\r\nconst Form = ({ calculateResult, setResult, result }) => {\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [changeFrom, setChangeFrom] = useState(\"PLN\");\r\n  const [changeOn, setChangeOn] = useState(\"EUR\");\r\n  const ratesData = useRatesData();\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    calculateResult(changeFrom, changeOn, amount);\r\n  };\r\n\r\n  const onFormReset = (event) => {\r\n    event.preventDefault();\r\n    setAmount(\"\");\r\n    setChangeFrom(\"PLN\");\r\n    setChangeOn(\"EUR\");\r\n    setResult(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onFormSubmit} onReset={onFormReset} >\r\n      {ratesData.state === \"loading\"\r\n        ? (\r\n          <Loading>\r\n            Trwa ładowanie kursów walut z Europejskiego Banku Centralnego. Proszę czekać...\r\n          </Loading>\r\n        )\r\n        : (\r\n          ratesData.state === \"error\" ? (\r\n            \r\n            <Failure>\r\n              hmm..Coś poszło nie tak. Sprawdź, czy masz połączenie z internetem.\r\n            </Failure>\r\n          ) : (\r\n             \r\n                <StyledFieldset>\r\n                  <Clock />\r\n                  <StyledLegend>Wymiana waluty</StyledLegend>\r\n\r\n                  <p>\r\n                    <label>\r\n                      <StyledLabelText>Wybierz wartość*:</StyledLabelText>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"amount\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        required\r\n                        autoFocus\r\n                        value={amount}\r\n                        onChange={({ target }) => setAmount(target.value)}\r\n                      />\r\n                    </label>\r\n                  </p>\r\n                  <p>\r\n                    <label>\r\n                      <StyledLabelText>Posiadam walutę:</StyledLabelText>\r\n                      <select\r\n                        value={changeFrom}\r\n                        onChange={({ target }) => setChangeFrom(target.value)}\r\n                        required\r\n                      >\r\n                        {Object.keys(ratesData.rates).map(((changeFrom) => (\r\n                          <option\r\n                            key={changeFrom}\r\n                            value={changeFrom}\r\n                          >\r\n                            {changeFrom}\r\n                          </option>\r\n\r\n                        )))}\r\n\r\n                      </select>\r\n                    </label>\r\n                  </p>\r\n                  <p>\r\n                    <label>\r\n                      <StyledLabelText>Chcę otrzymać:</StyledLabelText>\r\n                      <select\r\n                        value={changeOn}\r\n                        onChange={({ target }) => setChangeOn(target.value)}\r\n                        required\r\n                      >\r\n                        {Object.keys(ratesData.rates).map(((changeOn) => (\r\n                          <option\r\n                            key={changeOn}\r\n                            value={changeOn}\r\n                          >\r\n                            {changeOn}\r\n                          </option>\r\n\r\n                        )))}\r\n\r\n\r\n\r\n                      </select>\r\n                    </label>\r\n                  </p>\r\n\r\n                  <p>\r\n                    <StyledButton>Przelicz</StyledButton>\r\n\r\n                    <StyledButton type=\"reset\">\r\n                      Od nowa\r\n          </StyledButton>\r\n                  </p>\r\n\r\n                  <Result result={result} />\r\n                  <Footer> Pole oznaczone * jest obowiązkowe.\r\n      Kurs walut z dnia {ratesData.date}.</Footer>\r\n                </StyledFieldset>\r\n              \r\n            )\r\n        )}\r\n        \r\n    </form>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport Container from './container';\r\nimport Header from './Header';\r\nimport Form from './Form';\r\nimport { useRatesData } from './Form/useRatesData';\r\n\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState(\"\");\r\n  const ratesData = useRatesData();\r\n\r\n\r\n  const calculateResult = (changeFrom, changeOn, amount) => {\r\n    const result = (amount * ratesData.rates[changeOn]) / ratesData.rates[changeFrom];\r\n\r\n\r\n    setResult(`${result.toFixed(2)}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n\r\n        <Header title=\"Internetowy przelicznik walut &Prime;ItakCięNieStać&Prime;😈\" />\r\n        <Form calculateResult={calculateResult} setResult={setResult}\r\n          result={result} />\r\n      \r\n\r\n      </Container >\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { theme } from \"./theme\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\r\n    color: {\r\n        black: \"#000\",\r\n        red: \"#ff3333\",\r\n        yellow: \"#ffff00\",\r\n        lemon: \"#cfdb24\",\r\n        white: \"#fff\",\r\n        light: \"#F8F8F1\",\r\n\r\n    },\r\n};"],"sourceRoot":""}